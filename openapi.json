{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "PayBuddy Api",
    "description": "PayBuddy provides a simple and powerful REST API to integrate PayBuddy services (Loans, bills payment, airtime and data purchase, electricity utility payment, pay-TV suscription, money transfer, WAEC registration and result check, third-party insurance e.t.c ) into your business or application.\n\n This API reference provides information on available endpoints and how to interact with it. To read more about the API, visit our API documentation.",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5111",
      "description": "local develoment server"
    },
    {
      "url": "172.105.84.55:5111",
      "description": "server"
    },
    {
      "url": "https://staging.rubikpay.tech/paybuddy",
      "description": "staging environment for beta testing"
    },
    {
      "url": "https://api.rubikpay.tech/paybuddy",
      "description": "live production server"
    },
    {
      "url": "https://demo.rubikpay.tech/paybuddy",
      "description": "demo server for testing out functionality"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "users endpoints"
    },
    {
      "name": "loan",
      "description": "loans enpoints"
    },
    {
      "name": "payment",
      "description": "Payments enpoints"
    }
  ],
  "security": [
    {
      "api_key": ["x-api-key", "authorization"]
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "summary": "Details about a user",
        "operationId": "listUser",
        "tags": ["user"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details about a user",
            "headers": {
              "x-next": {
                "description": "A link to the next page of responses",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/registerUser": {
      "post": {
        "summary": "Register a new user",
        "operationId": "registerUser",
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerUser"
              }
            },
            "examples": {
              "summary": "An example of a registerUser request Body",
              "value": {
                "scheme": "Buddy",
                "mobile": "+26707835681",
                "firstName": "segufkn",
                "lastName": "IDEklmhj",
                "bvn": 22846785677,
                "channel": "ussd",
                "dob": "04-26-202",
                "gender": "Male",
                "imgUrl": "",
                "roles": ["user"],
                "pin": "0000",
                "createdBy": "self",
                "referralCode": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response of registerUser",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerUser"
                },
                "examples": {
                  "$ref": "#/components/schemas/registerUser:200Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invalidPayload"
                },
                "examples": {
                  "$ref": "#/components/examples/invalidPayload"
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequest"
                },
                "examples": {
                  "$ref": "#/components/examples/badRequest"
                }
              }
            }
          },
          "default": {
            "description": "server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "400": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "401": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "404": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "registerUser": {
        "type": "object",
        "required": ["scheme", "mobile"],
        "properties": {
          "scheme": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        }
      },
      "registerUser:200Response": {
        "summary": "An example of a registerUser success response",
        "value": {
          "status": true,
          "data": {
            "scheme": "Buddy",
            "mobile": "+26707835681",
            "createdAt": "2020-03-23T15:35:24.169Z",
            "isActive": true,
            "wallet": {
              "balance": 0,
              "ledgerBalance": 0
            }
          }
        }
      }
    },
    "examples": {
      "invalidPayload": {
        "summary": "An example of a invalid response",
        "value": {
          "status": false,
          "data": "invalid payload"
        }
      },
      "badRequest": {
        "summary": "An example of a bad request response",
        "value": {
          "status": false,
          "data": "user already exist"
        }
      },
      "registerUser": {
        "summary": "An example of a registerUser request Body",
        "value": {
          "scheme": "Buddy",
          "mobile": "+26707835681",
          "firstName": "segufkn",
          "lastName": "IDEklmhj",
          "bvn": 22846785677,
          "channel": "ussd",
          "dob": "04-26-202",
          "gender": "Male",
          "imgUrl": "",
          "roles": ["user"],
          "pin": "0000",
          "createdBy": "self",
          "referralCode": ""
        }
      }
    },
    "securityScheme": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
